const fs = require("fs");
const path = __dirname + "/quizData.json"; // ‡¶ï‡ßÅ‡¶á‡¶ú JSON ‡¶´‡¶æ‡¶á‡¶≤
const moneyPath = __dirname + "/moneyData.json"; // ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ü‡¶æ‡¶ï‡¶æ JSON

module.exports.config = {
    name: "quiz",
    version: "1.0.1",
    hasPermssion: 0,
    credits: "Mohammad Akash",
    description: "‡¶ï‡ßÅ‡¶á‡¶ú ‡¶ñ‡ßá‡¶≤‡ßã ‡¶è‡¶¨‡¶Ç ‡¶ü‡¶æ‡¶ï‡¶æ ‡¶ú‡¶ø‡¶§‡ßá ‡¶Ø‡¶æ‡¶ì",
    commandCategory: "game",
    usages: "/quiz",
    cooldowns: 2
};

// ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶°‡¶æ‡¶ü‡¶æ ‡¶≤‡ßã‡¶°
function loadQuiz() {
    if (!fs.existsSync(path)) fs.writeFileSync(path, JSON.stringify([]));
    return JSON.parse(fs.readFileSync(path));
}

// ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶°‡¶æ‡¶ü‡¶æ ‡¶≤‡ßã‡¶°
function loadData() {
    if (!fs.existsSync(moneyPath)) fs.writeFileSync(moneyPath, JSON.stringify({}));
    return JSON.parse(fs.readFileSync(moneyPath));
}
function saveData(data) {
    fs.writeFileSync(moneyPath, JSON.stringify(data, null, 2));
}

module.exports.run = async function({ api, event }) {
    const { senderID, threadID } = event;

    let data = loadData();
    if (!data[senderID]) data[senderID] = { balance: 0 };

    const quizzes = loadQuiz();
    if (quizzes.length === 0) return api.sendMessage("‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶®‡ßá‡¶á ‡¶è‡¶ñ‡¶® üò¢", threadID);

    // ‡¶∞‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶Æ ‡¶ï‡ßÅ‡¶á‡¶ú
    const randomQuiz = quizzes[Math.floor(Math.random() * quizzes.length)];

    const quizMsg = `‚ùì ‡¶ï‡ßÅ‡¶á‡¶ú: ${randomQuiz.question}\n\n` +
                    `A) ${randomQuiz.a}\n` +
                    `B) ${randomQuiz.b}\n` +
                    `C) ${randomQuiz.c}\n` +
                    `D) ${randomQuiz.d}\n\n` +
                    `Reply ‡¶è‡¶á ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ A, B, C ‡¶¨‡¶æ D ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶ì‡•§`;

    api.sendMessage(quizMsg, threadID, (err, info) => {
        global.GoatBot.onReply.set(info.messageID, {
            type: "quiz",
            author: senderID,
            messageID: info.messageID,
            correctAnswer: randomQuiz.answer.toUpperCase(), // A, B, C, D
            attempts: 0
        });
    });
};

// reply ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶ø‡¶Ç
module.exports.onReply = async function({ event, Reply }) {
    const { senderID, messageID, threadID, body } = event;

    if (!Reply || Reply.type !== "quiz") return;

    if (senderID !== Reply.author) {
        return global.GoatBot.api.sendMessage("‡¶è‡¶á ‡¶ï‡ßÅ‡¶á‡¶ú ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø üò°", threadID, messageID);
    }

    Reply.attempts += 1;
    const userAnswer = body.trim().toUpperCase(); // A, B, C, D

    if (userAnswer === Reply.correctAnswer) {
        let data = loadData();
        data[senderID].balance += 100; // ‡¶∏‡¶†‡¶ø‡¶ï ‡¶π‡¶≤‡ßá ‡ßß‡ß¶‡ß¶ Coins ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°
        saveData(data);

        global.GoatBot.api.sendMessage(
            `üéâ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞! 100 Coins ‡¶™‡ßá‡¶Ø‡¶º‡ßá‡¶õ‡ßã‡•§\nüí∞ ‡¶®‡¶§‡ßÅ‡¶® ‡¶¨‡ßá‡¶≤‡ßá‡¶®‡ßç‡¶∏: ${data[senderID].balance}`,
            threadID,
            messageID
        );
        global.GoatBot.onReply.delete(messageID);

    } else if (Reply.attempts >= 2) {
        global.GoatBot.api.sendMessage(
            `‚ùå ‡¶≠‡ßÅ‡¶≤ ‡¶â‡¶§‡ßç‡¶§‡¶∞‡•§ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶â‡¶§‡ßç‡¶§‡¶∞: ${Reply.correctAnswer}`,
            threadID,
            messageID
        );
        global.GoatBot.onReply.delete(messageID);

    } else {
        global.GoatBot.api.sendMessage(
            `‚ùå ‡¶≠‡ßÅ‡¶≤ ‡¶â‡¶§‡ßç‡¶§‡¶∞‡•§ ‡ßß ‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶¨‡¶æ‡¶ï‡¶ø‡•§ ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßã‡•§`,
            threadID,
            messageID
        );
        global.GoatBot.onReply.set(messageID, Reply);
    }
};
